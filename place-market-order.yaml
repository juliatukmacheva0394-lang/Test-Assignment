openapi: 3.0.3
info:
  version: '1.0'
  title: ORDER

servers:
  - url: 'http://localhost:3000'
    description: Local server

paths:
  /order:
    post:
      summary: Create New Order
      description: API creates a user's market order and sends a notification upon success or failure.
      operationId: post-order
      parameters:
        - name: Authorization
          in: header
          description: Bearer token for user authentication.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                typeId:
                  type: integer
                  description: ID of the order type (e.g., market, limit).
                direction:
                  type: string
                  enum: [buy, sell]
                  description: Direction of the order.
                instrumentId:
                  type: integer
                  description: ID of the trading instrument (e.g., EUR/USD).
                amount:
                  type: number
                  description: Volume of the order (number of slots).
              required:
                - typeId
                - direction
                - instrumentId
                - amount
            example:
              typeId: 2
              direction: buy
              instrumentId: 3
              amount: 1

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
                required: [error, message]
              example:
                error: Invalid instrumentId
                message: The instrument is not available for trading

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
                required: [error, message]
              example:
                error: Unauthorized
                message: Bearer token is missing or invalid

        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
                required: [error, message]
              example:
                error: KYC required
                message: Complete KYC verification to trade

        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
                required: [error, message]
              example:
                error: Insufficient balance
                message: Not enough funds to open position

        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
                required: [error, message]
              example:
                error: Internal Server Error
                message: An unexpected error occurred while processing the order. Please try again later.

components:
  schemas:
    Order:
      type: object
      title: Order
      properties:
        orderId:
          type: integer
          description: Unique identifier for the order.
        typeId:
          type: integer
          description: ID of the order type (e.g., market, limit).
        instrumentId:
          type: integer
          description: ID of the trading instrument (e.g., EUR/USD).
        amount:
          type: number
          description: Number of slots in the order.
        userId:
          type: integer
          description: Unique identifier for the user.
        price:
          type: number
          description: Price at which the order was executed.
        createDate:
          type: integer
          description: UNIX timestamp when the order was created.
        direction:
          type: string
          enum: [buy, sell]
          description: Direction of the order.
        status:
          type: string
          enum: [pending, filled, rejected]
          description: Current status of the order.
      required:
        - orderId
        - typeId
        - instrumentId
        - amount
        - userId
        - price
        - createDate
        - direction
        - status
      example:
        orderId: 1
        typeId: 4
        instrumentId: 2
        amount: 1
        userId: 123
        price: 1.003
        createDate: 1758193470
        direction: buy
        status: filled

x-internal: false
